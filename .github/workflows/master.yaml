name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "stable"

      - name: Linter
        run: make lint

      - name: Test
        run: make test

  # build_and_push:
  #   runs-on: ubuntu-latest
  #   needs: test
  #   steps:
  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v2

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ vars.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Build and push
  #       uses: docker/build-push-action@v4
  #       with:
  #         push: true
  #         tags: ${{ vars.IMAGE_NAME }}

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build_and_push
  #   steps:
  #     - name: Deploy
  #       uses: appleboy/ssh-action@v0.1.3
  #       with:
  #         host: ${{ vars.SERVER_HOST }}
  #         username: ${{ vars.SERVER_USERNAME }}
  #         password: ${{ secrets.SERVER_PASSWORD }}
  #         port: ${{ vars.SERVER_PORT }}
  #         script: |

  #           # Set env variables
  #           export TINVEST_BOT_TOKEN=${{ secrets.TINVEST_BOT_TOKEN }}
  #           export TINVEST_BOT_DEBUG=${{ vars.TINVEST_BOT_DEBUG }}

  #           # Login into Docker Registry
  #           docker login -u ${{ vars.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}

  #           # Stop running container
  #           docker stop ${{ vars.CONTAINER_NAME }}

  #           # Remove old container
  #           docker rm ${{ vars.CONTAINER_NAME }}

  #           # Remove old image
  #           docker rmi ${{ vars.IMAGE_NAME }}

  #           # Run a new container from a new image
  #           docker run -d \
  #           --name ${{ vars.CONTAINER_NAME }}  \
  #           -e TINVEST_BOT_TOKEN \
  #           -e TINVEST_BOT_DEBUG \
  #           -v $(echo $PWD)/database:/app/database \
  #           --restart always \
  #           ${{ vars.IMAGE_NAME }}
